upstream oauth2-proxy {
    server oauth2-proxy:4180;
}

upstream rundeck {
    server rundeck-server:4440;
}

server {
    listen 80;
    server_name localhost;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Client max body size
    client_max_body_size 100M;

    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;

    # Timeout settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Buffer settings
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 8 8k;
    proxy_busy_buffers_size 16k;

    # OAuth2 Proxy authentication endpoints
    location /oauth2/ {
        proxy_pass http://oauth2-proxy;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Auth-Request-Redirect $request_uri;
    }

    # Auth request endpoint
    location = /oauth2/auth {
        internal;
        proxy_pass http://oauth2-proxy;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Remote-Addr $remote_addr;
        proxy_set_header X-Original-Host $host;
    }

    # Redirect root to OAuth2 start if not authenticated
    location = / {
        auth_request /oauth2/auth;
        
        # If auth fails, redirect to OAuth2 start
        error_page 401 403 = @oauth2_start;
        
        # Set authentication headers from oauth2-proxy response
        auth_request_set $user $upstream_http_x_auth_request_user;
        auth_request_set $email $upstream_http_x_auth_request_email;
        auth_request_set $groups $upstream_http_x_auth_request_groups;
        
        # Set default role if groups is empty
        set $roles $groups;
        if ($roles = "") {
            set $roles "admin,user,architect,deploy,build";
        }
        
        # Proxy to Rundeck
        proxy_pass http://rundeck/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # Set Rundeck expected headers
        proxy_set_header X-Forwarded-User $user;
        proxy_set_header X-Forwarded-Email $email;
        proxy_set_header X-Forwarded-Roles $roles;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Prevent caching of authentication responses
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # Main application - proxy to Rundeck with auth
    location / {
        auth_request /oauth2/auth;
        
        # If auth fails, redirect to OAuth2 start
        error_page 401 403 = @oauth2_start;
        
        # Set authentication headers from oauth2-proxy response
        auth_request_set $user $upstream_http_x_auth_request_user;
        auth_request_set $email $upstream_http_x_auth_request_email;
        auth_request_set $groups $upstream_http_x_auth_request_groups;
        
        # Set default role if groups is empty
        set $roles $groups;
        if ($roles = "") {
            set $roles "admin,user,architect,deploy,build";
        }
        
        # Proxy to Rundeck
        proxy_pass http://rundeck;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # Set Rundeck expected headers
        proxy_set_header X-Forwarded-User $user;
        proxy_set_header X-Forwarded-Email $email;
        proxy_set_header X-Forwarded-Roles $roles;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Prevent caching of authentication responses
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # OAuth2 start redirect location
    location @oauth2_start {
        return 302 /oauth2/start?rd=$request_uri;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 